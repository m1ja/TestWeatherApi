import asyncio
import requests
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton, KeyboardButtonPollType
from aiogram.filters import Command
from aiogram import Bot, Dispatcher, F
from weather.views import get_weather, get_weather_data

token = '1547511727:AAEhsio1Kah0QVaNHLE6c_JHbExAy8plm2k'

keyboard = ReplyKeyboardMarkup(keyboard=[
    [
        KeyboardButton(
            text='–£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É‚òÄÔ∏è'
        )
    ]
], resize_keyboard=True)

keyboard_location = ReplyKeyboardMarkup(keyboard=[
    [
        KeyboardButton(
            text='–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ–º üìç',
            request_location=True
        )
    ]
], resize_keyboard=True)

async def start_bot(bot: Bot):
    await bot.send_message(775860797, text='–±–æ—Ç –∑–∞–ø—É—à–µ–Ω')


async def stop_bot(bot: Bot):
    await bot.send_message(775860797, text='–±–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')


async def get_start(message: Message, bot: Bot):
    await message.answer('–í—ã –ø–æ–ø–∞–ª–∏ –±–æ—Ç –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–≥–æ–¥—É‚òÄÔ∏è', reply_markup=keyboard)


async def get_weather_button(messge: Message, bot: Bot):
    await messge.answer('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –≤ –∫–æ—Ç–æ—Ä–æ–º —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ" —á—Ç–æ –±—ã —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –≤ —Ç–µ–∫—É—â–µ–º –º–µ—Å—Ç–µ', reply_markup=keyboard_location)


async def get_location(message: Message, bot: Bot):
    weather = f"http://127.0.0.1:8000/weather?lat={message.location.latitude}&lon={message.location.longitude}"
    response = requests.get(weather)
    if response.status_code == 200:
        data = response.json()
        city = data.get('city')
        temperature = data.get('temperature')
        pressure = data.get('pressure')
        wind_speed = data.get('wind_speed')
    else:
        await message.answer('–ß—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫')
    if city is not None:
        await message.answer(f'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –≥–æ—Ä–æ–¥–µ {city} üåá\n'
                             f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç {temperature} üå°\n'
                             f'–î–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —É–ª–∏—Ü–µ {pressure} –º–º —Ä—Ç.—Å—Ç ‚õÖÔ∏è\n'
                             f'–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ {wind_speed} üí®')
    else:
        await message.answer(f'–ì–æ—Ä–æ–¥ –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω üôÅ\n'
                             f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç {temperature} üå°\n'
                             f'–î–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —É–ª–∏—Ü–µ {pressure} –º–º —Ä—Ç.—Å—Ç ‚õÖÔ∏è\n'
                             f'–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ {wind_speed} üí®')


async def get_city(message: Message, bot: Bot):
    weather = f"http://127.0.0.1:8000/weather?city={message.text}"
    response = requests.get(weather)
    if response.status_code == 200:
        data = response.json()
        city = data.get('city')
        temperature = data.get('temperature')
        pressure = data.get('pressure')
        wind_speed = data.get('wind_speed')
    else:
        await message.answer('–ß—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫')
    if city is not None:
        await message.answer(f'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –≥–æ—Ä–æ–¥–µ {city} üåá\n'
                             f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç {temperature} üå°\n'
                             f'–î–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —É–ª–∏—Ü–µ {pressure} –º–º —Ä—Ç.—Å—Ç ‚õÖÔ∏è\n'
                             f'–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ {wind_speed} üí®')
    else:
        await message.answer(f'–ì–æ—Ä–æ–¥ –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω üôÅ\n'
                             f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç {temperature} üå°\n'
                             f'–î–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —É–ª–∏—Ü–µ {pressure} –º–º —Ä—Ç.—Å—Ç ‚õÖÔ∏è\n'
                             f'–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ {wind_speed} üí®')



async def start():
    bot = Bot(token=token)

    dp = Dispatcher()
    dp.startup.register(start_bot)
    dp.shutdown.register(stop_bot)
    dp.message.register(get_location, F.location)
    dp.message.register(get_weather_button, F.text == '–£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É‚òÄÔ∏è')
    dp.message.register(get_start, Command('start'))
    dp.message.register(get_city)

    try:
        await dp.start_polling(bot)
    finally:
        await bot.session.close()


if __name__ == '__main__':
    asyncio.run(start())